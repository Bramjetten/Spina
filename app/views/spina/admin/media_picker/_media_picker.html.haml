.fixed.top-0.w-full.h-full.bg-gray-800.bg-opacity-50.z-50.overflow-y-auto{data: {controller: "modal media-picker infinite-scroll", mode: @mode}}
  .flex.justify-center.items-center.shadow-xl.rounded-md
    .bg-white.w-full.max-w-lg{data: {infinite_scroll_target: "scrollContainer"}}
      %header
        = button_tag type: :default, class: 'modal-close-cross', data: {action: "modal#close"} do
          = icon('cross')
        - if @mode == "multiple"
          %h3=t "spina.images.choose_images"
        - else
          %h3=t "spina.images.choose_image"
      %section.media-picker
        = hidden_field_tag :input, params[:input], data: {media_picker_target: "input"}
    
        %div{data: {media_picker_target: "grid"}}
          = render 'media_picker_grid'

      - if @mode == "trix"
        %section.media-picker-footer
          = text_field_tag :alt, nil, placeholder: "‚úçÔ∏è Alt", data: {media_picker_target: "alt"}
          = text_field_tag :link_to_url, nil, placeholder: "üîó Link to URL", data: {media_picker_target: "linkToUrl"}

          = button_tag type: :button, class: 'pull-right button button-primary', data: {action: "media-picker#insert_trix"} do
            =t "spina.images.insert_image"

      - if @mode == "multiple"
        %section.media-picker-footer
          .media-picker-selected-images{data: {media_picker_target: "selectedImages"}}
            - @selected_images.each do |image|
              = image_tag thumbnail_url(image), data: {media_picker_target: "selectedImage", image_id: image.id, signed_blob_id: image.file.blob.signed_id}

          = button_tag type: :button, class: 'pull-right button button-primary', data: {action: "media-picker#choose_multiple"} do
            =t "spina.images.confirm_selection"
            %span{data: {media_picker_target: "selectedCount"}} (#{@selected_images.size})